
1、sharding


3、建立集群
    1集合分片 起步
    2配置服务器、
    3mongos 一个分片至少需要一个mongos，但是没有上限
    4分片

    增减容量
    移除分片
    3.3.2 修改分片中的服务器

4、使用集群
    1.查询
    2.计数
    2.2唯一索引
    2.3更新
    3.mapreduce
        临时集合

5、管理
    1.使用命令
    1.1了解概况
        db.printShardingStatus()
    1.2配置集合
    1.3应该连接什么
    2.监控
        保留一个已经连接上集群的shell， 创建一个连接要求MongoDB暂时给连接一个锁
    2.1mongostat
    2.2web管理界面
        副本集确保--rest选项启动他们 http://localhost:28017/_replSet mongod如果mongod是在27017上边运行的
    3.备份
    4.关于架构的建议
    4.1创建应急站
       2.虚拟护城河 通过队列控制对其群的访问
    5.1分片处理
    分片停机
    5.2多数分片停机
    5.3配置服务器停机
    5.4mongos进程死掉
    5.5其他注意事项
6、学习资源

应用设计技巧50例
    1/速度和完整性的折中
        范式化和反范式化 各有利弊

    2、适应未来的数据要范式化
    3、尽量单个查询获取数据  应用单元
    4、嵌入关联数据
    
    ……
    11、优先使用$操作符
    		db.members.find({"$where":functions(){
    			return: this.member[0].age == this.member[1].age;
    		}}
				where 对查询带来了很大的灵活性，但是也带来了很大的效率问题。
				
		12、随时聚合
				$inc计算随时聚合
		13、编写代码处理数据完整性问题
				MongoDB无模式的特点和反范式化的优势
				ODM 对象文档映射   类比于 ORM 对象关系映射
				
实现技巧
		14、使用正确的类型
				数字类型方便排序
				但是 AND 和 OR只适用于整数类型，不适合双精度浮点等
		15、使用简单唯一的id替换掉_id
		
		16、不要使用文档做_id 
		
		17、不要用数据库引用
		
		18、如何实现chrome浏览器关闭页面时弹出“确定要离开此面吗？”		
		
		
														





