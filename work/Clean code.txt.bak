1.2 最糟糕的代码
	wading 沼泽
	勒布朗leBlanc法则：稍后等于永不（Later equals never）。
1.3.1 华丽的新设计
	花时间保持代码整洁不但有关效率，还有关生存。
	
1.3.2 态度
	医生不应该同意病人请求在给他做手术前别洗手，同理，程序员遵从不了解混乱风险的经理的意愿，也是不专业的做法。

1.3.4 整洁代码的艺术
	有些人生而有之。有些人费点劲才能得到。
	
1.3.5 什么是整洁的代码
	代码逻辑应当直截了当，叫缺陷难以隐藏；尽量减少依赖关系，
使之便于维护；依据某种分层战略完善错误处理代码；性能调至最优，省得引诱别人做没规矩的
优化
	破窗理论
	
1.4 思想流派
		尊重其他流派
1.5 我们是作者
		编辑器回放：读与写花费时间的比例超过 10: 1。写新代码时，我们一直在读旧代码。
		
1.6 童子军
		让营地比你来时更干净。
		
1.7 前传与原则
		单一权责原则（Single Responsibility Principle，SRP）、开放闭合原则（Open Closed Principle，OCP）和依赖倒置原则（Dependen
cy Inversion Principle，DIP）等

1.8 小结
		小提琴家在去表演的路上迷路的老笑话吗？他在街角拦住一位长者，问他怎
么才能去卡耐基音乐厅（Carnegie Hall）。长者看了看小提琴家，又看了看他手中的琴，说道：
“你还得练，孩子，还得练！”

2.2 命名，名副其实，见名知意
		选个好名字要花时间，但省下来的时间比花掉的多。注意命名，而且一旦发现有更好的名称，就换掉旧的。
		*****例子很受用

2.3 避免误导
		accountList --> accountGroup 或者bunchOfAccounts

2.4 做有意义的区分
		光是①添加数字系列或是②废话远远不够，即便这足以让编译器满意。如果名称必须相异，那其意思也应该不同才对。
		废话是另一种没意义的区分。
		废话都是冗余。
		
		generation Timestamp

2.9 类名
		类名和对象名应该是名词或名词短语
2.10 方法名
		方法名应当是动词或动词短语，
2.11 别扮可爱

2.15 使用源自所涉问题领域的名称
		
2.16 添加有意义的语境

2.17 不要添加没有用的语境


